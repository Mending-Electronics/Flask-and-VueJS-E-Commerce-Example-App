version: '3.8'

services:
  web:
    build: .
    container_name: flask_app
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - .:/app
      - ./instance:/app/instance
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=development
      - DATABASE_URL=sqlite:////app/instance/ecommerce.db
      - SECRET_KEY=your-secret-key-here
    depends_on:
      - redis
    command: >
      sh -c "python -m instance.reset_db &&
             gunicorn --bind 0.0.0.0:5000 --workers 4 --threads 2 app:app"

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Uncomment the following service if you want to add a database like PostgreSQL
  # db:
  #   image: postgres:13-alpine
  #   container_name: postgres
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_DB=ecommerce
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data/

volumes:
  redis_data:
  # postgres_data:
